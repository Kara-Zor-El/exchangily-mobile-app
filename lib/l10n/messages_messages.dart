// DO NOT EDIT. This is code generated via package:intl/generate_localized.dart
// This is a library that provides messages for a messages locale. All the
// messages from the main program should be duplicated here with the same
// function name.

// Ignore issues from commonly used lints in this file.
// ignore_for_file:unnecessary_brace_in_string_interps, unnecessary_new
// ignore_for_file:prefer_single_quotes,comment_references, directives_ordering
// ignore_for_file:annotate_overrides,prefer_generic_function_type_aliases
// ignore_for_file:unused_import, file_names

import 'package:intl/intl.dart';
import 'package:intl/message_lookup_by_library.dart';

final messages = new MessageLookup();

typedef String MessageIfAbsent(String messageStr, List<dynamic> args);

class MessageLookup extends MessageLookupByLibrary {
  String get localeName => 'messages';

  final messages = _notInlinedMessages(_notInlinedMessages);
  static _notInlinedMessages(_) => <String, Function> {
    "addGas" : MessageLookupByLibrary.simpleMessage("Add Gas"),
    "addGasTransactionFailed" : MessageLookupByLibrary.simpleMessage("Add gas transaction failed"),
    "addGasTransactionSuccess" : MessageLookupByLibrary.simpleMessage("Add gas transaction was made successfully"),
    "address" : MessageLookupByLibrary.simpleMessage("Address"),
    "addressCopied" : MessageLookupByLibrary.simpleMessage("Address Copied"),
    "addressMising" : MessageLookupByLibrary.simpleMessage("Address Mising"),
    "addressShare" : MessageLookupByLibrary.simpleMessage("Address Share"),
    "advance" : MessageLookupByLibrary.simpleMessage("Advance"),
    "amount" : MessageLookupByLibrary.simpleMessage("Amount"),
    "amountMissing" : MessageLookupByLibrary.simpleMessage("Amount Missing"),
    "assetInExchange" : MessageLookupByLibrary.simpleMessage("Asset In Exchange"),
    "assets" : MessageLookupByLibrary.simpleMessage("Assets"),
    "assetsInExchange" : MessageLookupByLibrary.simpleMessage("Assets In Exchange"),
    "available" : MessageLookupByLibrary.simpleMessage("Available"),
    "backupMnemonic" : MessageLookupByLibrary.simpleMessage("Backup Mnemonic"),
    "backupYourMnemonic" : MessageLookupByLibrary.simpleMessage("Backup Your Mnemonic"),
    "buy" : MessageLookupByLibrary.simpleMessage("Buy"),
    "buyOrders" : MessageLookupByLibrary.simpleMessage("Buy Orders"),
    "cancel" : MessageLookupByLibrary.simpleMessage("Cancel"),
    "changeWalletLanguage" : MessageLookupByLibrary.simpleMessage("Change Wallet Language"),
    "checkingExistingWallet" : MessageLookupByLibrary.simpleMessage("Checking existing wallet"),
    "close" : MessageLookupByLibrary.simpleMessage("Close"),
    "closeOrders" : MessageLookupByLibrary.simpleMessage("Close Orders"),
    "closeTheApp" : MessageLookupByLibrary.simpleMessage("Do you want to close the app"),
    "coin" : MessageLookupByLibrary.simpleMessage("Coin"),
    "confirm" : MessageLookupByLibrary.simpleMessage("Confirm"),
    "confirmDeposit" : MessageLookupByLibrary.simpleMessage("Confirm Deposit"),
    "confirmPassword" : MessageLookupByLibrary.simpleMessage("Confirm Password"),
    "copiedSuccessfully" : MessageLookupByLibrary.simpleMessage("Copied Successfully"),
    "copyAddress" : MessageLookupByLibrary.simpleMessage("Copy Address"),
    "createWallet" : MessageLookupByLibrary.simpleMessage("Create Wallet"),
    "creatingWallet" : MessageLookupByLibrary.simpleMessage("Creating Wallet"),
    "date" : MessageLookupByLibrary.simpleMessage("Date"),
    "deleteWallet" : MessageLookupByLibrary.simpleMessage("Delete Wallet"),
    "depositTransactionFailed" : MessageLookupByLibrary.simpleMessage("Deposit transaction failed"),
    "depositTransactionSuccess" : MessageLookupByLibrary.simpleMessage("Deposit transaction was made successfully"),
    "dialogManagerTypeSamePasswordNote" : MessageLookupByLibrary.simpleMessage("Type the same password which you have entered while creating the wallet"),
    "displayMnemonic" : MessageLookupByLibrary.simpleMessage("Display Mnemonic"),
    "emptyAddress" : MessageLookupByLibrary.simpleMessage("Empty Address"),
    "emptyPassword" : MessageLookupByLibrary.simpleMessage("Empty Password"),
    "enterAddress" : MessageLookupByLibrary.simpleMessage("Enter Address"),
    "enterAmount" : MessageLookupByLibrary.simpleMessage("Enter Amount"),
    "enterPassword" : MessageLookupByLibrary.simpleMessage("Enter Password"),
    "fabLockForExgAirdrop" : MessageLookupByLibrary.simpleMessage("Fab Lock For Exg Airdrop"),
    "filledAmount" : MessageLookupByLibrary.simpleMessage("Filled Amount"),
    "finishWalletBackup" : MessageLookupByLibrary.simpleMessage("Finish Wallet Backup"),
    "function" : MessageLookupByLibrary.simpleMessage("Function"),
    "gas" : MessageLookupByLibrary.simpleMessage("Gas"),
    "gasFee" : MessageLookupByLibrary.simpleMessage("Gas Fee"),
    "gasLimit" : MessageLookupByLibrary.simpleMessage("Gas Limit"),
    "gasPrice" : MessageLookupByLibrary.simpleMessage("Gas Price"),
    "genericError" : MessageLookupByLibrary.simpleMessage("An error occured. Try again later."),
    "hideMnemonic" : MessageLookupByLibrary.simpleMessage("Hide Mnemonic"),
    "hideSmallAmountAssets" : MessageLookupByLibrary.simpleMessage("Hide Small Amount Assets"),
    "high" : MessageLookupByLibrary.simpleMessage("High"),
    "importMnemonic" : MessageLookupByLibrary.simpleMessage("Import Mnemonic"),
    "importMnemonicHint" : MessageLookupByLibrary.simpleMessage("Import Mnemonic Hint"),
    "importWallet" : MessageLookupByLibrary.simpleMessage("Import Wallet"),
    "insufficientBalance" : MessageLookupByLibrary.simpleMessage("Insufficient Balance"),
    "invalidAddress" : MessageLookupByLibrary.simpleMessage("Invalid Address"),
    "invalidAmount" : MessageLookupByLibrary.simpleMessage("Invalid Amount"),
    "invalidMnemonic" : MessageLookupByLibrary.simpleMessage("Invalid Mnemonic"),
    "isOnItsWay" : MessageLookupByLibrary.simpleMessage("is on its way"),
    "kanbanGasFee" : MessageLookupByLibrary.simpleMessage("Kanban Gas Fee"),
    "kanbanGasLimit" : MessageLookupByLibrary.simpleMessage("Kanban Gas Limit"),
    "kanbanGasPrice" : MessageLookupByLibrary.simpleMessage("Kanban Gas Price"),
    "loading" : MessageLookupByLibrary.simpleMessage("Loading"),
    "locked" : MessageLookupByLibrary.simpleMessage("Locked"),
    "lockedAmount" : MessageLookupByLibrary.simpleMessage("Locked Amount"),
    "low" : MessageLookupByLibrary.simpleMessage("Low"),
    "market" : MessageLookupByLibrary.simpleMessage("Market"),
    "marketTrades" : MessageLookupByLibrary.simpleMessage("Market Trades"),
    "minimumAmount" : MessageLookupByLibrary.simpleMessage("Minimum amount"),
    "minimumAmountError" : MessageLookupByLibrary.simpleMessage("Minimum amount error"),
    "mnemonic" : MessageLookupByLibrary.simpleMessage("Mnemonic"),
    "move" : MessageLookupByLibrary.simpleMessage("Move"),
    "moveAndTrade" : MessageLookupByLibrary.simpleMessage("Move And Trade"),
    "no" : MessageLookupByLibrary.simpleMessage("No"),
    "openOrders" : MessageLookupByLibrary.simpleMessage("Open Orders"),
    "orderBook" : MessageLookupByLibrary.simpleMessage("Order Book"),
    "pair" : MessageLookupByLibrary.simpleMessage("Pair"),
    "passwordConditions" : MessageLookupByLibrary.simpleMessage("Please enter the password that satisfy above conditions"),
    "passwordConditionsMismatch" : MessageLookupByLibrary.simpleMessage("Password Conditions Mismatch"),
    "passwordDoesNotMatched" : MessageLookupByLibrary.simpleMessage("Password does not matched"),
    "passwordMatched" : MessageLookupByLibrary.simpleMessage("Password Matched"),
    "passwordMismatch" : MessageLookupByLibrary.simpleMessage("Password Mismatch"),
    "passwordRetype" : MessageLookupByLibrary.simpleMessage("Please retype the same password in both fields"),
    "payableValue" : MessageLookupByLibrary.simpleMessage("Payable Value"),
    "placeOrderTransactionSuccessful" : MessageLookupByLibrary.simpleMessage("Place order transaction was made successfully"),
    "pleaseEnterAnAddress" : MessageLookupByLibrary.simpleMessage("Please enter an address"),
    "pleaseEnterValidNumber" : MessageLookupByLibrary.simpleMessage("Please enter a valid number"),
    "pleaseFillAllTheTextFieldsCorrectly" : MessageLookupByLibrary.simpleMessage("Please fill all the text fields correctly"),
    "pleaseFillBothPasswordFields" : MessageLookupByLibrary.simpleMessage("Please fill both password fields"),
    "pleaseProvideTheCorrectPassword" : MessageLookupByLibrary.simpleMessage("Please provide the correct Password"),
    "price" : MessageLookupByLibrary.simpleMessage("Price"),
    "priceChange" : MessageLookupByLibrary.simpleMessage("Price Change"),
    "quantity" : MessageLookupByLibrary.simpleMessage("Quantity"),
    "reDeposit" : MessageLookupByLibrary.simpleMessage("Re-Deposit"),
    "receive" : MessageLookupByLibrary.simpleMessage("Receive"),
    "received" : MessageLookupByLibrary.simpleMessage("Received"),
    "receiverWalletAddress" : MessageLookupByLibrary.simpleMessage("Receiver Wallet Address"),
    "redeposit" : MessageLookupByLibrary.simpleMessage("Redeposit"),
    "redepositCompleted" : MessageLookupByLibrary.simpleMessage("Redeposit Completed"),
    "redepositError" : MessageLookupByLibrary.simpleMessage("Redeposit error"),
    "redepositItemNotSelected" : MessageLookupByLibrary.simpleMessage("Redeposit item not selected"),
    "restoringWallet" : MessageLookupByLibrary.simpleMessage("Restoring wallet"),
    "satoshisPerByte" : MessageLookupByLibrary.simpleMessage("Satoshis/byte"),
    "saveAndShareQrCode" : MessageLookupByLibrary.simpleMessage("Save and Share Qr Code"),
    "scanBarCode" : MessageLookupByLibrary.simpleMessage("Scan Bar Code"),
    "scanCancelled" : MessageLookupByLibrary.simpleMessage("Scan Cancelled"),
    "secureYourWallet" : MessageLookupByLibrary.simpleMessage("Secure Your Wallet"),
    "seed" : MessageLookupByLibrary.simpleMessage("Seed"),
    "sell" : MessageLookupByLibrary.simpleMessage("Sell"),
    "sellOrders" : MessageLookupByLibrary.simpleMessage("Sell Orders"),
    "send" : MessageLookupByLibrary.simpleMessage("Send"),
    "sendTransactionComplete" : MessageLookupByLibrary.simpleMessage("Send Transaction Complete"),
    "sent" : MessageLookupByLibrary.simpleMessage("Sent"),
    "serverError" : MessageLookupByLibrary.simpleMessage("Server Error"),
    "serverTimeoutPleaseTryAgainLater" : MessageLookupByLibrary.simpleMessage("Server Timeout, Please try again later"),
    "setPasswordConditions" : MessageLookupByLibrary.simpleMessage("Enter password which is minimum 8 characters long and contains at least 1 uppercase, lowercase, number and a special character using !@#\$&*~`%^()-_"),
    "setPasswordNote" : MessageLookupByLibrary.simpleMessage("Note: For Password reset you have to keep the mnemonic safe as that is the only way to recover the wallet"),
    "settings" : MessageLookupByLibrary.simpleMessage("Settings"),
    "smartContract" : MessageLookupByLibrary.simpleMessage("Smart Contract"),
    "smartContractAddress" : MessageLookupByLibrary.simpleMessage("Smart Contract Address"),
    "smartContractName" : MessageLookupByLibrary.simpleMessage("Smart Contract Name"),
    "somethingWentWrong" : MessageLookupByLibrary.simpleMessage("Something Went Wrong"),
    "taphereToCopyTxId" : MessageLookupByLibrary.simpleMessage("Tap here to copy TxId"),
    "title" : MessageLookupByLibrary.simpleMessage("Exchangily Wallet"),
    "toExchange" : MessageLookupByLibrary.simpleMessage("to exchange"),
    "toWallet" : MessageLookupByLibrary.simpleMessage("to wallet"),
    "totalBalance" : MessageLookupByLibrary.simpleMessage("Total Balance"),
    "trade" : MessageLookupByLibrary.simpleMessage("Trade"),
    "transactionAmount" : MessageLookupByLibrary.simpleMessage("Transaction Amount"),
    "transactionHistory" : MessageLookupByLibrary.simpleMessage("Transaction History"),
    "transactionId" : MessageLookupByLibrary.simpleMessage("Transaction Id"),
    "transactions" : MessageLookupByLibrary.simpleMessage("Transactions"),
    "transanctionFailed" : MessageLookupByLibrary.simpleMessage("Transanction Failed"),
    "type" : MessageLookupByLibrary.simpleMessage("Type"),
    "typeYourWalletPassword" : MessageLookupByLibrary.simpleMessage("Type your wallet password"),
    "unknownError" : MessageLookupByLibrary.simpleMessage("Unknown Error"),
    "userAccessDenied" : MessageLookupByLibrary.simpleMessage("User Access Denied"),
    "userReturnedByPressingBackButton" : MessageLookupByLibrary.simpleMessage("User returned by pressing the back button"),
    "value" : MessageLookupByLibrary.simpleMessage("Value"),
    "volume" : MessageLookupByLibrary.simpleMessage("Volume"),
    "wallet" : MessageLookupByLibrary.simpleMessage(" Wallet"),
    "walletbalance" : MessageLookupByLibrary.simpleMessage("Wallet Balance"),
    "warningBackupMnemonic" : MessageLookupByLibrary.simpleMessage("Below are the 12 words mnemonic to help you recover your wallet. Please make sure that your password is safely stored and write down this mnemonics on the paper, as this is the only way to recover your phone wallet"),
    "warningImportOrConfirmMnemonic" : MessageLookupByLibrary.simpleMessage("Please type in your 12 word mnemonic phrase in the correct sequence to confirm"),
    "welcomeText" : MessageLookupByLibrary.simpleMessage("Welcome to Exchangily. To begin you may create a new wallet or import an existing one."),
    "withdrawToWallet" : MessageLookupByLibrary.simpleMessage("Withdraw To Wallet"),
    "withdrawTransactionFailed" : MessageLookupByLibrary.simpleMessage("Withdraw transaction failed"),
    "withdrawTransactionSuccessful" : MessageLookupByLibrary.simpleMessage("Withdraw transaction was made successfully"),
    "yes" : MessageLookupByLibrary.simpleMessage("Yes"),
    "yourWithdrawMinimumAmountaIsNotSatisfied" : MessageLookupByLibrary.simpleMessage("Your withdraw minimum amount is not satisfied")
  };
}
